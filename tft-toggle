#!/bin/bash
DO_RETURN=${SHLVL}
PROG="${0##*/}"
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

# Legacy list of possible GPIO pins.  These can change based on HW or SW revisions, so we keep track
GPIO_PINS="508 252"

# Directories to check to make sure we have the GPIO support available
GPIO_DIRS="/sys/devices/platform/bcm2708_spi.0/spi_master/spi0/spi0.1/stmpe-gpio.0/gpio/ /sys/class/spi_master/spi0/spi0.1/stmpe-gpio/gpio/ /sys/devices/soc/20204000.spi/spi_master/spi0/spi0.1/stmpe-gpio/gpio/"

# DEBUG="yes"
#############################

do_exit() {
        STATUS=${1:-0}
        REASON="${2}"

        [[ -n "${REASON}" ]] && echo "${REASON}"

        [[ ${DO_RETURN:-0} -eq 1 ]] && return ${STATUS} || exit ${STATUS}
}


available() {
	NOT_FOUND=1
	for d in ${GPIO_DIRS}
	do
		[[ -n "${DEBUG}" ]] && echo "available:DIR(${d}) exists?"

		if [ -d ${d} ]
		then
			NOT_FOUND=0
		fi
	done
	return ${NOT_FOUND}
}

find_gpio() {
	GPIO_NOT_FOUND=1

	for p in ${GPIO_PINS}
	do
		[[ -n "${DEBUG}" ]] && echo "available:GPIO(${p}) exists?"
		if [ -w /sys/class/gpio/export ]
		then
			if [ ! -r /sys/class/gpio/gpio${p}/device/modalias ]
			then
				echo ${p} > /sys/class/gpio/export 2>/dev/null
			fi
			
			grep --binary-files=text -U -q stmpe-gpio /sys/class/gpio/gpio${p}/device/modalias >/dev/null 2>&1
			if [ $? -eq 0 ]
			then
				GPIO_NOT_FOUND=0
				PIN=${p}
			fi
		else
			echo "Can't add GPIO pin ${PIN} to exports"
		fi
	done

	return ${GPIO_NOT_FOUND}
}

smtpe_toggle()
{
	# This is the new-fangled way of doing things.  Much better than GPIO twiddling
	NOT_TOGGLED=1
	STATE=$(cat /sys/class/backlight/soc\:backlight/bl_power)
	STATE=$((1-STATE))
	echo "${STATE}" > /sys/class/backlight/soc\:backlight/bl_power
	if [ "$(cat /sys/class/backlight/soc\:backlight/bl_power)" -eq ${STATE} ]
	then
		NOT_TOGGLED=0
	fi
	return ${NOT_TOGGLED}
}

gpio_toggle()
{
	NOT_TOGGLED=1

	if [ -w /sys/class/gpio/gpio${PIN}/direction ]
	then
		if [ ${FORCE:-0} -gt 0 ]
		then
			echo 'out' > /sys/class/gpio/gpio${PIN}/direction
			echo "$STATE" > /sys/class/gpio/gpio${PIN}/value
			[[ -n "${DEBUG}" ]] && echo "toggle:tft(${STATE})"
		else
			echo 'in' > /sys/class/gpio/gpio${PIN}/direction
			STATE=$(cat /sys/class/gpio/gpio${PIN}/value)

			echo 'out' > /sys/class/gpio/gpio${PIN}/direction

			#invert the state to flip it
			STATE=$((1-STATE))

			[[ -n "${DEBUG}" ]] && echo "toggle:tft(${STATE})"
			echo ${STATE} > /sys/class/gpio/gpio${PIN}/value
		fi
		NOT_TOGGLED=0
	fi

	return ${NOT_TOGGLED}
}


if [ -n "${1}" -o -z "${0##*-on}" -o -z "${0##*-off}" ]
then
   OPT=${1:-$0}
   STATE=${OPT//*off/0}
   STATE=${STATE//*on/1}
   STATE=${STATE//^[0-9]/}
   FORCE=1
fi

if [ -r /sys/class/backlight/soc\:backlight/bl_power ]
then
	smtpe_toggle
else
	available || do_exit 1 "Can't determine GPIO for stmpe device"
	find_gpio || do_exit 1 "Can't locate an available GPIO pin for fbtft"
	toggle || do_exit 1 "Unable to toggle the tft"
fi
